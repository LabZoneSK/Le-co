// the grid

/* 
   dependencies:
     $breakpoints
     $grid-columns
*/

// column container
.row {
	width: 100%;
	clear: both;
	margin-bottom: 10px;
	@include clearfix;
}

// columns  

/* structural grid (layout) */

[class*="c-"] {
	float: left;
	min-height: 1px;
	padding: 0 10px;
	word-wrap: break-word;
	width: 100%;
}

// preventing padding stacking
[class*="c-"] [class*="c-"] {
    padding: 0;
}


/* fixing pixel "rounding" */

[class*="c-"]+[class*="c-"]:last-child {
	float: right;
}

// generating all breakpoint overrides
@each $breakpointName, $breakpointStartingPoint in $breakpoints {
	@media only screen and (min-width: ($breakpointStartingPoint)) {
		@for $i from 1 through $grid-columns {
			.c-#{$breakpointName}-#{($i)} {
				width: 100%/$grid-columns * $i;
			}
			.c-#{$breakpointName}-f#{($i)} {
				width: 100%/$i;
			}
		}
	}
}


/* column nesting limit -> 4 levels allowed - may be removed or tweaked if needed */

[class*="c-"]>[class*="c-"]>[class*="c-"]>[class*="c-"]>[class*="c-"] {
	width: 100%;
}

// text grid gutter (not for general layout)
.text-gutter > [class*="c-"] {
	padding: 0 10px 10px 0;
}